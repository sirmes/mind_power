<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>mind_power</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>-6571177963077866617</string>
			<key>name</key>
			<string>Locahost_mind_power</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>mind_power</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>latin1</string>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {694, 456}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>--1) Bring tester answers counts not grouped
select l.name as leadership, t.leadership_count, t.leadership_percentage
from testers_answers_counts t, leadership l 
where id_tester = 49
and t.id_leadership = l.id
order by 3;

--2) Bring tester answers counts grouped by leadership
select s.name strategic_management, l.name as leadership, t.leadership_count, t.leadership_percentage
from testers_answers_counts t, leadership l, strategic_management s
where id_tester = 49
and t.id_leadership = l.id
and s.id = t.id_strategic_management
group by s.name, l.name, t.leadership_count, t.leadership_percentage
order by s.id, l.name, t.leadership_percentage;

--4) Use from one of above

--5)Being all questions(statements) that were submitted
select l.name leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and l.id = q.id_leadership
group by l.name, q.question
order by 1, 2;

--Bring all questions(statements) that were NOT submitted
select l.name as leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and q.id_leadership = l.id
and l.active = 'A'
and q.id not in (
select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49
and t.id_question = q.id)
group by name, question
order by name, question
limit 0, 3;

--Answers picked twice
select * from 
(
select s.name, question, count(question) as counter
from questions_answers q, testers_answers t, leadership s
where t.id_tester = 48
and t.id_question = q.id
and s.id = q.id_leadership
group by s.name
order by 3 desc, 1, 2
) as results
where counter &gt;= 2

/* General tests */

select * from questions_answers where question like '%concerns and think in their shoes';

select * from questions_answers where question like '%pain and think in their shoes';

update questions_answers set question = 'I can feel others'' pain and think in their shoes'
where id in (19, 349, 380, 382);

</string>
			<key>table</key>
			<string>companies</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>214</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49
and t.id_question = q.id</string>
		<string>select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49
and t.id_question = q.id)</string>
		<string>select l.name as leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and q.id_leadership = l.id
and l.active = 'A'
and 
q.id not in (
select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49
and t.id_question = q.id)</string>
		<string>select * from 
(
select s.name, question, count(question) as counter
from questions_answers q, testers_answers t, leadership s
where t.id_tester = 48
and t.id_question = q.id
and s.id = q.id_leadership
group by s.name
order by 3 desc, 1, 2
) as results
where counter &gt;= 2</string>
		<string>select l.name as leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and q.id_leadership = l.id
and l.active = 'A'
/*and l.id = 6*/
and 
q.id not in (
select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49
and t.id_question = q.id)</string>
		<string>select l.name as leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and q.id_leadership = l.id
and l.active = 'A'
/*and l.id = 6*/
and 
q.id not in (
select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49</string>
		<string>select l.name as leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and q.id_leadership = l.id</string>
		<string>select l.name as leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and q.id_leadership = l.id
and l.active = 'A'
/*and l.id = 6*/
and 
q.id not in (
select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49
and t.id_question = q.id)
group by name, question
order by name, question</string>
		<string>select l.name leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and l.id = q.id_leadership
group by l.name, q.question
order by 1, 2</string>
		<string>select l.name as leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and q.id_leadership = l.id
and l.active = 'A'
/*and l.id = 6*/
and 
q.id not in (
select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49
and t.id_question = q.id)
group by name, question
order by name, question
limit 0, 3</string>
		<string>select * from questions_answers where question like '%pain and think in their shoes'</string>
		<string>update questions_answers set question = 'I can feel others'' pain and think in their shoes'
where id in (19, 349, 380, 382)</string>
		<string>select * from questions_answers where question like '%concerns and think in their shoes'</string>
		<string>update questions_answers set question = 'I can feel others’ pain and think in their shoes'
where id in (19, 349, 380, 382)</string>
		<string>update from questions_answers set question = 'I can feel others’ pain and think in their shoes'
where id in (19, 349, 380, 382)</string>
		<string>select * from questions</string>
		<string>select * from questions where question like '%concerns and think in their shoes'</string>
		<string>select l.name as leadership, q.question
from testers_answers t, questions_answers q, leadership l
where t.id_tester = 49
and t.id_question = q.id
and q.id_leadership = l.id
and l.active = 'A'</string>
		<string>select l.name, q.question
from testers_answers t, questions_answers q, leadership l
where 
t.id_question = q.id
and q.id_leadership = l.id
and l.active = 'A'
/*and l.id = 6*/
and 
q.id not in (
select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49
and t.id_question = q.id)
group by name, question
order by name, question
limit 0, 3</string>
		<string>--All questions(statements) that were not submitted
select l.name, q.question
from testers_answers t, questions_answers q, leadership l
where 
t.id_question = q.id
and q.id_leadership = l.id
and l.active = 'A'
/*and l.id = 6*/
and 
q.id not in (
select q.id
from testers_answers t, questions_answers q
where t.id_tester = 49
and t.id_question = q.id)
group by name, question
order by name, question
limit 0, 3</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.5.22</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
