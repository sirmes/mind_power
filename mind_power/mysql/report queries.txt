--1) Not grouped
select * from testers_answers_counts where id_tester = 46;

--2) Grouped by leadership
select * from testers_answers_counts where id_tester = 46 
group by id_sub_category order by sub_category_percentage;

--4) Use from one of above

--5)
--All that were submitted
select t.*, q.* 
from testers_answers t, questions_answers q
where t.id_tester = 47
and t.id_question = q.id;

--All that were not submitted
select t.*, q.* 
from testers_answers t, questions_answers q
where 
t.id_question = q.id
and 
q.id not in (
select q.id
from testers_answers t, questions_answers q
where t.id_tester = 47
and t.id_question = q.id);

--Answers picked up twice
select s.name, question, count(*) 
from questions_answers q, testers_answers t, sub_categories s
where t.id_tester = 47
and t.id_question = q.id
and s.id = q.id_sub_category
group by question
order by 3 desc, 1, 2;

------- Extract raw information from DB to cross checking --------

SELECT t.name, t.given_names, ta.id, qa.question, l.name, sm.name
FROM testers t, testers_answers ta, questions_answers qa, leadership l, strategic_management sm
WHERE t.id =11
AND t.id = ta.id_tester
and id_question = qa.id
and l.id = qa.id_leadership
and sm.id = qa.id_strategic_management
LIMIT 0 , 30000

SELECT t.name, t.given_names, l.name, sm.name, tac.leadership_count, tac.leadership_percentage
FROM testers t, leadership l, strategic_management sm,
testers_answers_counts tac
WHERE t.id =11
and l.id = tac.id_leadership
and sm.id = tac.id_strategic_management
and tac.id_tester = t.id
LIMIT 0 , 30000
